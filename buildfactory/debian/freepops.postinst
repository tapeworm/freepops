#! /bin/sh
# postinst script for freepops
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

case "$1" in
    configure)

	# Source debconf library.
	. /usr/share/debconf/confmodule

	# Check their answers.

	# jail script........
	db_get freepops/jail
	if [ "$RET" = true ]; then
		JAIL_SCRIPT=/usr/share/doc/freepops/create_jail.sh
		JAIL_DIR=`/bin/sh $JAIL_SCRIPT get-dir`
		#create it
		/bin/sh $JAIL_SCRIPT create
		#comment old config
		mv /etc/default/freepops /etc/default/.freepops~
		sed s/DAEMON\=/\#DAEMON\=/ /etc/default/.freepops~ > \
			/etc/default/freepops
		rm /etc/default/.freepops~
		#update config
		echo "DAEMON=$JAIL_DIR/start.sh" >> /etc/default/freepops
	fi

	# init script..........
	db_get freepops/init
	if [ "$RET" = true ]; then
		update-rc.d freepops defaults 1>/dev/null 2>/dev/null
		/etc/init.d/freepops start
	fi


    ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


