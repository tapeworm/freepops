#LyX 1.3 created this file. For more info see http://www.lyx.org/
\lyxformat 221
\textclass article
\begin_preamble

\end_preamble
\language english
\inputencoding auto
\fontscheme bookman
\graphics default
\paperfontsize 12
\spacing single 
\papersize a4paper
\paperpackage widemarginsa4
\use_geometry 0
\use_amsmath 0
\use_natbib 0
\use_numerical_citations 0
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\quotes_times 2
\papercolumns 1
\papersides 1
\paperpagestyle fancy

\layout Title

FreePOPs Manual
\layout Standard


\begin_inset LatexCommand \tableofcontents{}

\end_inset 


\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
newpage
\end_inset 


\layout Section

Introduction
\layout Standard

FreePOPs is a POP3 daemon plus a LUA interpreter and some extra libraries
 for HTTP and HTML parsing.
 Its main purpose is translating local POP3 requests to remote HTTP actions
 on the supported web-mails, but it is really more flexible: for example
 there is a plugin to read news from a website as if they were mails in
 a mailbox.
 You can easily extend FreePOPs on the fly, without even restarting it;
 you can add a plugin or modify an existing one simply changing the script
 file since the plugins are written in LUA and are interpreted on the fly.
\layout Subsection

Usage situations
\layout Standard

FreePOPs can be useful in some situations, here we give the most obvious
 ones:
\layout Itemize

You are behind a firewall that closes the 110 port but you need to read
 your mail and the web-mail of your mail provider sucks.
\layout Itemize

Your mail provider does not allow you to access your mailbox with POP3 protocol,
 but only through the web-mail service.
\layout Itemize

You prefer looking at your mailbox instead of browsing some websites news.
\layout Itemize

You have to develop a POP3 server in less than a week and you want it to
 be reasonably fast and not so memory consuming.
\layout Itemize

You are not a C hacker, but you want to benefit from a fast POP3 server
 frontend written in C and you want not to waste a month in writing the
 backend in C.
 LUA is a really simple and tiny language, one week is enough to learn it
 in a way that allows you to use it productively.
\layout Subsection

Features
\layout Standard

FreePOPs is the only software I know with these features:
\layout Itemize

POP3 server RFC compliant (not full featured but compliant).
\layout Itemize

Portable (written in C and LUA that is written in C, so everything is written
 in the most portable language around the world).
\layout Itemize

Small (in the sense of resources usage) and reasonably fast.
\layout Itemize

Extremely extensible on the fly using a simple and powerful language.
\layout Itemize

Pretty documented.
\layout Itemize

Released under the GNU/GPL license (this means FreePOPs is Free Software).
\layout Subsection

Plugins
\layout Standard

These are the plugin currently included in FreePOPs:
\layout Description

libero.lua This plugins fully supports the 
\family typewriter 
www.libero.it
\family default 
 webmail for mailboxes with domains like 
\family typewriter 
@libero.it
\family default 
, 
\family typewriter 
@iol.it
\family default 
, 
\family typewriter 
@inwind.it
\family default 
, 
\family typewriter 
@blu.it
\family default 
.
\layout Description

tin.lua This plugins fully supports the 
\family typewriter 
communicator.virgilio.it
\family default 
 webmail for mailboxes with domains like 
\family typewriter 
@tin.it
\family default 
, 
\family typewriter 
@virgilio.it
\family default 
.
\layout Description

lycos.lua This plugin supports the 
\family typewriter 
mail.lycos.it
\family default 
 webmail for mailboxes with 
\family typewriter 
@lycos.it
\family default 
 domains.
\layout Description

popforward.lua This is a plugin mainly used for testing some FreePOPs modules.
 It acts as a POP3 forward, it simply works as a man in the middle of you
 and a real POP3 server.
 This allowed us to test FreePOPs without having any real plugin already
 written.
 You may consider using it to masquerade a really buggy POP3 server that
 can be easily compromised trough malicious requests.
 Obviously we suggest you to examine properly this plugin, and hack on it
 to prevent malicious requests to your server.
\layout Description

aggregator.lua Many sites provide an RSS backend for indexing their news.
 This plugin makes this RSS behave as a mailbox in which you can find a
 mail for each news.
\layout Description

flatnuke.lua This is a more powerful aggregator for a FlatNuke-based
\begin_inset Foot
collapsed true

\layout Standard

See HTTP://flatnuke.sourceforge.net for the project homepage
\end_inset 

 websites, and allows the download of the whole news body.
\layout Description

kernel.lua This is a plugin to monitor the news about the Linux kernel through
 ChangeLogs
\layout Section

History
\layout Standard

FreePOPs was not born from scratch.
 A similar project (only in the main usage situation) is LiberoPOPs.
 
\layout Standard

The ancestor of FreePOPs is completely written in C for some uninteresting
 reasons.
 LiberoPOPs supports 
\begin_inset Quotes eld
\end_inset 

plugins
\begin_inset Quotes erd
\end_inset 

 but in a more static and complex way.
 The POP3 server frontend could be attached to a backend written in C, this
 means you have to recompile and restart LiberoPOPs each time to change
 a line in a plugin.
 Another interesting point is that LiberPOPs was created from scratch in
 a really short time (you have to be Italian and use a 
\family typewriter 
@libero.it
\family default 
 mail address to understand why), this means it was born with a lot of bugs
 and FIX-ME in the code.
 
\layout Standard

The LiberoPOPs project had a quick success, because everybody needed it,
 and this means we had a lot of users.
 In the opensource (and also Linux) philosophy you have to release frequently
 and this was exactly what we did: we used to release every two days.
 We were working not with Unix users, nor hackers, but mostly with Win32
 users.
 Suddenly we realized that they were lazy/bored of updating the software
 every 2 days.
 The ugly Win-world has taught them that software auto-updates, auto-install
 and even auto-codes probably.
 
\layout Standard

We tried to solve this pulling out of the C engine most of the change-prone
 code, but this was really hard since C is not thought to do this.
 After LiberoPOPs had stabilized we started to think how to solve this.
 
\layout Standard

A scripting/interpreted embedded language seemed to me a nice choice and
 after a long search on the net and on the newsgroup of my university I
 found LUA..
 This is not the place for telling the world how good this small language
 is and I won't talk more about it here.
 Integrating the LUA interpreter in LiberoPOPs was not so hard and FreePOPs
 is the result.
 Now it is really easier to write/test a plugin and (even if it is not implement
ed yet) an auto-update facility is really easy to code since there is no
 need to recompile the C core in most cases.
\layout Section

FreePOPs configuration file
\layout Standard

FreePOPs doesn't really need a configuration.
 Most users shouldn't change the configuration file.
 In case you are a developer or a really curious user the configuration
 file is 
\family typewriter 
config.lua
\family default 
, placed in the program directory under win32 or in 
\family typewriter 
/etc/freepops/
\family default 
 in a posix environment.
\layout Standard

Later you will learn that plugins are associated with a mail address domain,
 and some of these plugins are aliased to other domains to make it easier
 to fetch some news from some sites.
 Read the plugin documentation for more info about them, and maybe send
 as a mail with your new alias if you want it to be integrated in the next
 FreePOPs release.
\layout Section

FreePOPs command line parameters
\layout Standard

The real FreePOPs configuration is made trough command line arguments.
 They are described in depth in the man page in Unix environments, here
 we present only the most useful:
\layout Description

-p\SpecialChar ~
<port>,\SpecialChar ~
--port\SpecialChar ~
<port> By default FreePOPs binds on port 2000.
 To alter this behaviour just use this switch.
\layout Description

-P\SpecialChar ~
<host>:<port>,\SpecialChar ~
--proxy\SpecialChar ~
<host>:<port> To tell FreePOPs which is your HTTP
 proxy.
\layout Description

-v,\SpecialChar ~
--verbose,\SpecialChar ~
-w,\SpecialChar ~
--veryverbose This tells FreePOPs to log some interesting
 info for bug reporting.
\layout Description

-t\SpecialChar ~
<num>,\SpecialChar ~
--threads\SpecialChar ~
<num> FreePOPs is able to manage multiple connections,
 up to num.
 Default is 5.
\layout Standard

In posix environments like Debian GNU/Linux you can start FreePOPs at boot
 time as a standard service.
 In this case the command line switches are stored in 
\family typewriter 
/etc/default/freepops
\family default 
, in some rpm based systems you should find the same file as 
\family typewriter 
/etc/sysconfig/freepops
\family default 
.
\layout Section

Email client configuration
\layout Standard

To configure your email client you must change the pop3 server settings.
 Usually you must use localhost as the pop3 host name, and 2000 as the pop3
 port.
 In case you install FreePOPs in another computer of your LAN, you should
 use the host's name instead of localhost, while in case you changed the
 default port with the 
\family typewriter 
-p
\family default 
 switch you will have to use that same port in your email client.
 You always have to use a full email address as username, for example 
\family typewriter 
something@libero.it
\family default 
 instead of only 
\family typewriter 
something
\family default 
.
 This is because FreePOPs chooses the plugin to load by looking at your
 username.
 Later we will present all the plugins and their associated domains.
\layout Section

Plugins
\layout Standard

Here we give a detailed description of each plugin.
\layout Subsection

libero.lua
\layout Standard

This plugin allows you to read the mails you have in a 
\family typewriter 
@libero.it
\family default 
, 
\family typewriter 
@iol.it
\family default 
, 
\family typewriter 
@inwind.it
\family default 
 and 
\family typewriter 
@blu.it 
\family default 
mailbox.
 This means you can still use your favorite mail reader instead of using
 the webmail.
 This plugin acts as a browser that surfs your webmail account and make
 it appear as a POP3 server.
 For more info on this plugin you may read the LiberoPOPs (FreePOPs ancestor)
 website at 
\family typewriter 
http://liberopops.sourceforge.net
\layout Standard

To use this plugin you have to use your full email address as the username
 and your real password as the password.
\layout Subsection

tin.lua
\layout Standard

This is the webmail support for 
\family typewriter 
@virgilio.it
\family default 
 and 
\family typewriter 
@tin.it 
\family default 
mailboxes.
 To use this plugin you have to use your full email address as the username
 and your real password as the password.
\layout Subsection

lycos.lua
\layout Standard

This is the webmail support for 
\family typewriter 
@lycos.it
\family default 
 mailboxes.
 To use this plugin you have to use your full email address as the username
 and your real password as the password.
\layout Subsection

popforward.lua
\layout Standard

This plugin was developed to test FreePOPs before any real plugins were
 written.
 It simply forwards to a real POP3 server your local requests.
 This can be used for masquerading a buggy POP3 server, but if you think
 you need this you should examine carefully the plugin code and add checks
 to improve the detection/avoidance of malicious requests, since the plugins
 was not born with security in mind.
 
\layout Standard

To use this plugin you have to edit the config.lua file.
 This because we can't add all the existing POP3 server to this file :)
 The plugin wants two arguments, the POP3 host and the port (usually 
\family typewriter 
110
\family default 
) on which the server listens.
 This is an example of a configuration line for this plugin, in which all
 email addresses of the 
\family typewriter 
@virgilio.it
\family default 
 domain are forwarded to 
\family typewriter 
in.virgilio.it:110
\family default 
:
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
linespread{0.5}
\layout Standard

\backslash 
begin{footnotesize}
\layout Standard

\backslash 
begin{verbatim}
\layout Standard
-- popforward plugin 
\layout Standard
freepops.MODULES_MAP["virgilio.it"]     = {         
\layout Standard
       name="popforward.lua",         
\layout Standard
       args={ 
\layout Standard
              port=110,
\layout Standard
              host="in.virgilio.it"
\layout Standard
       } 
\layout Standard
} 
\layout Standard

\backslash 
end{verbatim}
\layout Standard

\backslash 
end{footnotesize}
\end_inset 


\layout Subsection

aggregator.lua
\layout Standard

Usually you can benefit from the W3C's RSS format when you read some website
 news.
 The RSS file indexes the news, providing a link to them.
 This plugin can make your mail client see the RSS file as a mailbox from
 which you can download each news as if it was a mail message.
 The only limitation is that this plugin can fetch only a news summary plus
 the news link.
 
\layout Standard

To use this plugin you have to use a casual username with the 
\family typewriter 
@aggregator
\family default 
 suffix (ex: 
\family typewriter 
foo@aggregator
\family default 
) and as the password the URL of the RSS file(ex: 
\family typewriter 
http://www.securityfocus.com/rss/vulnerabilities.xml
\family default 
).
 For your commodity we added some alias for you.
 This means you have not to search by hand the URL of the RSS file.
 We added some domain, for example 
\family typewriter 
@securityfocus.com
\family default 
, that can be used to directly use the aggregator plugin with these website.
 To use these alias you have to use a username in the form 
\family typewriter 
something@aggregatordomain
\family default 
 and a casual password.
 This is the list of aliases for the aggregator plugin.
\newline 

\newline 

\begin_inset  Tabular
<lyxtabular version="3" rows="11" columns="2">
<features>
<column alignment="left" valignment="top" leftline="true" width="0">
<column alignment="left" valignment="top" leftline="true" rightline="true" width="0">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
aggregatordomain
\end_inset 
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\size footnotesize 
description
\end_inset 
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
freepops.rss.en
\end_inset 
</cell>
<cell multicolumn="1" alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
http://freepops.sourceforge.net/
\family default 
 news (English)
\end_inset 
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
freepops.rss.it
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
http://freepops.sourceforge.net/
\family default 
 news (Italian)
\end_inset 
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
flatnuke.sf.net
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
http://flatnuke.sourceforge.net/
\family default 
 news (Italian)
\end_inset 
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
ziobudda.net
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
http://ziobudda.net/
\family default 
 news (both Italian and English)
\end_inset 
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
punto-informatico.it
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
http://punto-informatico.it/
\family default 
 news (Italian)
\end_inset 
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
linuxdevices.com
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
http://linuxdevices.com/
\family default 
 news (English)
\end_inset 
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
gaim.sf.net
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
http://gaim.sourceforge.net/ 
\family default 
news (English)
\end_inset 
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
securityfocus.com
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
http://www.securityfocus.com/ 
\family default 
new vulnerabilities (English)
\end_inset 
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
games.gamespot.com
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
http://www.gamespot.com/ 
\family default 
computer games news (English)
\end_inset 
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
news.gamespot.com
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
http://www.gamespot.com/ 
\family default 
GameSpot news (English)
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\layout Subsection

flatnuke.lua
\layout Standard

This plugin is an aggregator plugin specialized in the websites made with
 the FlatNuke
\begin_inset Foot
collapsed false

\layout Standard

HTTP://flatnuke.sourceforge.net
\end_inset 

 content management system, or other sites that use the same news format
 like the FreePOPs website.
 Since in a FlatNuke site the news are stored in plain xml files this plugin
 is able to fetch the whole news, and not only the headings as the aggregator
 plugin.
 This is really useful if you don't want to surf the website to read the
 news.
\layout Standard

To use this plugin you have to use a username with the 
\family typewriter 
@flatnuke
\family default 
 domain (ex: 
\family typewriter 
something@flatnuke
\family default 
) and a flatnuke homepage URL as the password (ex: 
\family typewriter 
http://flatnuke.sourceforge.net/
\family default 
, no need for the RSS file URL since FlatNuke puts the RSS in a fixed and
 well known position.
 There are some alias for FlatNuke sites, see the aggregator plugin documentatio
n to know what this means):
\newline 

\newline 

\begin_inset  Tabular
<lyxtabular version="3" rows="4" columns="2">
<features>
<column alignment="left" valignment="top" leftline="true" width="0">
<column alignment="left" valignment="top" leftline="true" rightline="true" width="0">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
aggregatordomain
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\size footnotesize 
description
\end_inset 
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
freepops.en
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
http://freepops.sourceforge.net/
\family default 
 full news (English)
\end_inset 
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
freepops.it
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
http://freepops.sourceforge.net/
\family default 
 full news (Italian)
\end_inset 
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
flatnuke.it
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
http://flatnuke.sourceforge.net/
\family default 
 full news (Italian)
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\layout Subsection

kernel.lua
\layout Standard

This plugin helps in staying up to date with the Linux kernel releases.
 
\family typewriter 
http://kernel.org
\family default 
 is the official page with the Linux kernel releases, each with its ChangeLog.
 You should use 
\family typewriter 
something@kernel.org
\family default 
 to receive news about every tree, 
\family typewriter 
something@kernel.org.24
\family default 
 or 
\family typewriter 
something@kernel.org.26
\family default 
 for a specific tree.
 Password is not used, type a random string.
\layout Section

Creating a plugin
\layout Standard

The best way of doing this is to read carefully the 
\family typewriter 
libero.lua
\family default 
 file, that is a quite simple but really commented example of web-mail plugin.
 Then you should copy the 
\family typewriter 
skeleton.lua
\family default 
 file and start hacking on it.
 Remember to edit 
\family typewriter 
config.lua
\family default 
 to make FreePOPs associate the right mail-addresses domains to your new
 plugin.
 A simpler example is 
\family typewriter 
flatnuke.lua
\family default 
 that is a web-news plugin.
\layout Standard

Two section follows, the first is a quick overview of what a plugin has
 to do, the latter is a more detailed tutorial.
\layout Subsection

Plugins overview
\layout Standard

A plugin is essentially a backend for a POP3 server.
 The plugins are written in LUA
\begin_inset Foot
collapsed true

\layout Standard

The language website is http://www.lua.org
\newline 
See http://www.lua-user.org for a tutorial.
\end_inset 

 while the POP3 server is written in C.
 Here we examine the interfaces between The C core and the LUA plugins.
\layout Subsubsection

The interface between the C core and a plugin
\layout Standard

As we explained before the C POP3 frontend has to be attached to a LUA backend.
 The interface is really simple if you know the POP3 protocol.
 Here we only summarize the meaning, but the RFC 1939 (included in the 
\family typewriter 
doc/
\family default 
 directory of the source distribution) is really short and easy to read.
 As your intuition should suggest the POP3 client may ask the pop3 server
 to know something about the mail that is in the mailbox and eventually
 retrieve/delete a message.
 And this is exactly what it does.
\layout Standard

The backend must implement all the POP3 commands (like USER, PASS, RETR,
 DELE, QUIT, LIST, ...) and must give back to the frontend the result.
 Let us give a simple example of a POP3 session taken from the RFC:
\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
linespread{0.5}
\layout Standard

\backslash 
begin{footnotesize}
\layout Standard

\backslash 
begin{verbatim}
\layout Standard
     1  S: <wait for connection on TCP port 110>
\layout Standard
     2  C: <open connection>
\layout Standard
     3  S:    +OK POP3 server 
\layout Standard
     4  C:    USER linux@kernel.org
\layout Standard
     5  S:    +OK now insert the pasword
\layout Standard
     6  C:    PASS gpl
\layout Standard
     7  S:    +OK linux's maildrop has 2 messages (320 octets)
\layout Standard
     8  C:    STAT
\layout Standard
     9  S:    +OK 1 320
\layout Standard
    10  C:    LIST
\layout Standard
    11  S:    +OK 2 messages (320 octets)
\layout Standard
    12  S:    1 320
\layout Standard
    13  S:    .
\layout Standard
    14  C:    RETR 1
\layout Standard
    15  S:    +OK 120 octets
\layout Standard
    16  S:    <the POP3 server sends message 1>
\layout Standard
    17  S:    .
\layout Standard
    18  C:    DELE 1
\layout Standard
    19  S:    +OK message 1 deleted
\layout Standard
    20  C:    QUIT
\layout Standard
    21  S:    +OK dewey POP3 server signing off (maildrop empty)
\layout Standard
    22  C:  <close connection>
\layout Standard
    23  S:  <wait for next connection>
\layout Standard

\backslash 
end{verbatim}
\layout Standard

\backslash 
end{footnotesize}
\end_inset 


\layout Standard

In this session the backend will be called for lines 4, 6, 8, 10, 14, 18,
 20 (all the 
\family typewriter 
C:
\family default 
 lines) and respectively the functions implementing the POP3 commands will
 be called this way
\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
linespread{0.5}
\layout Standard

\backslash 
begin{footnotesize}
\layout Standard

\backslash 
begin{verbatim}
\layout Standard
    user(p,"linux@kernel.org")
\layout Standard
    pass(p,"gpl")
\layout Standard
    stat(p)
\layout Standard
    list_all(p)
\layout Standard
    retr(p,1)
\layout Standard
    dele(p,1)
\layout Standard
    quit_update(p)
\layout Standard

\backslash 
end{verbatim}
\layout Standard

\backslash 
end{footnotesize}
\end_inset 


\layout Standard

Later I will make clear what p is.
 I hope we'll remove it making it implicit for complete transparency.
 It is easy to understand that there is a 1-1 mapping between POP3 commands
 and plugin function calls.
 You can view a plugin as the implementation of the POP3 interface.
\layout Subsubsection

The interface between a plugin and the C core
\layout Standard

Let us take in exam the call to 
\family typewriter 
pass(p,
\begin_inset Quotes erd
\end_inset 

linux@kernel.org
\begin_inset Quotes erd
\end_inset 

)
\family default 
.
 Here the plugin should authenticate the user (if there is a sort of authenticat
ion) and inform the C core of the result.
 To achieve this each plugin function must return an error flag, to be more
 accurate one of these errors:
\newline 

\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="10" columns="2">
<features>
<column alignment="left" valignment="top" leftline="true" width="0">
<column alignment="block" valignment="top" leftline="true" rightline="true" width="7cm">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\size footnotesize 
Code
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none" width="7cm">
\begin_inset Text

\layout Standard


\size footnotesize 
Meaning
\end_inset 
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
POPSERVER_ERR_OK
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\size footnotesize 
No error
\end_inset 
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
POPSERVER_ERR_NETWORK
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\size footnotesize 
An error concerning the network
\end_inset 
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
POPSERVER_ERR_AUTH
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\size footnotesize 
Authorization failed
\end_inset 
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
POPSERVER_ERR_INTERNAL
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\size footnotesize 
Internal error, please report the bug
\end_inset 
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
POPSERVER_ERR_NOMSG
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\size footnotesize 
The message number is out of range
\end_inset 
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
POPSERVER_ERR_LOCKED
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\size footnotesize 
Mailbox is locked by another session
\end_inset 
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
POPSERVER_ERR_EOF
\end_inset 
</cell>
<cell multicolumn="1" alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\size footnotesize 
End of transmission, used in the popserver_callback
\end_inset 
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
POPSERVER_ERR_TOOFAST
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\size footnotesize 
You are not allowed to reconnect to the server now, wait a bit and retry
\end_inset 
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\family typewriter 
\size footnotesize 
POPSERVER_ERR_UNKNOWN
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\size footnotesize 
No idea of what error I've encountered
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\newline 

\newline 

\layout Standard

In our case the most appropriate error codes are 
\family typewriter 
POPSERVER_ERR_AUTH
\family default 
 and 
\family typewriter 
POPSERVER_ERR_OK
\family default 
.
 This is a simple case, in which an error code is enough.
 Now we analyze the more complex case of the call to 
\family typewriter 
list_all(p)
\family default 
.
 Here we have to return an error code as before, but we have also to inform
 the C core of the size of all messages in the mailbox.
 Here we need the p parameter passed to each plugin function (note that
 parameter may became implicit in the future).
 
\family typewriter 
p
\family default 
 stands for the data structure that the C expect us to fill calling appropriate
 functions like 
\family typewriter 
set_mailmessage_size(p,num,size)
\family default 
 where num is the message number and size is the size in bytes.
 Usually it is really common to put more functions all together.
 For example when you get the message list page in a webmail you know the
 number of the messages, their size and uidl so you can fill the p data
 structure with all the informations for LIST, STAT, UIDL.
 
\layout Standard

The last case that we examine is 
\family typewriter 
retr(p,num,data)
\family default 
.
 Since a mail message can be really big, there is no pretty way of downloading
 the entire message without making the mail client complain about the server
 death.
 The solution is to use a callback.
 Whenever the plugin has some data to send to the client he should call
 the 
\family typewriter 
popserver_callback(buffer,data)
\family default 
.
 
\family typewriter 
data
\family default 
 is an opaque structure the popserver needs to accomplish its work (note
 that this parameter may be removed for simplicity).
 In some cases, for example if you know the message is small or you are
 working on a fast network, you can fetch the whole message and send it,
 but remember that this is more memory consuming.
\layout Subsection

The art of writing a plugin (plugins tutorial)
\layout Standard

In this section we will write a plugin step by step examining each important
 detail.
 We will not write a real and complete plugin since it may be a bit hard
 to follow but we will create an ad-hoc webmail for our purposes.
\layout Subsubsection

(step 1) the skeleton
\layout Standard

The first thing we will do is to copy the skeleton.lua file to foo.lua (since
 we will write the plugin for the foo.xx webmail, xx stands for a real domain,
 bu I don't want to mention any websites here...).
 Now with your best editor (I suggest vim under unix and scintilla for win32,
 since they support syntax hilights for LUA, but any other text editor is
 ok) open foo.lua and change the first few lines adding the plugin name,
 version, your name, your email and a short comment in the proper places.
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
linespread{0.5}
\layout Standard

\backslash 
begin{footnotesize}
\layout Standard

\backslash 
begin{verbatim}
\layout Standard
-- ************************************************************************** -- 
\layout Standard
--  FreePOPs @--put here domain-- webmail interface 
\layout Standard
--  
\layout Standard
--  $Id$ 
\layout Standard
--  
\layout Standard
--  Released under the GNU/GPL license 
\layout Standard
--  Written by --put Name here-- <--put email here--> 
\layout Standard
-- ************************************************************************** --
\layout Standard

\layout Standard
PLUGIN_VERSION = "--put version here--" 
\layout Standard
PLUGIN_NAME = "--put name here--" 
\layout Standard

\backslash 
end{verbatim}
\layout Standard

\backslash 
end{footnotesize}
\end_inset 

 Now we have an empty plugin, but it is not enough to start hacking on it.
 We need to open the config.lua file (in the win32 distribution it is placed
 in the main directory, while in the unix distribution it is in /etc/freepops/;
 other copies of this file may be included in the distributions, but they
 are backup copies) and add a line like this
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
linespread{0.5}
\layout Standard

\backslash 
begin{footnotesize}
\layout Standard

\backslash 
begin{verbatim}
\layout Standard
-- foo plugin 
\layout Standard
freepops.MODULES_MAP["foo.xx"]      = {name="foo.lua"} 
\layout Standard

\backslash 
end{verbatim}
\layout Standard

\backslash 
end{footnotesize}
\end_inset 

 at the beginning of the file.
 Before ending the first step you should try if the plugin is correctly
 activated by frepops when needed.
 To do this we have to add few lines to foo.lua, in partcular we have to
 add an error return value to user().
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
linespread{0.5}
\layout Standard

\backslash 
begin{footnotesize}
\layout Standard

\backslash 
begin{verbatim}
\layout Standard
-- -------------------------------------------------------------------------- -- 
\layout Standard
-- Must save the mailbox name 
\layout Standard
function user(pstate,username)   
\layout Standard
        return POPSERVER_ERR_AUTH 
\layout Standard
end 
\layout Standard

\backslash 
end{verbatim}
\layout Standard

\backslash 
end{footnotesize}
\end_inset 

 Now the user function always fails, returning an authentication error.
 Now you have to start FreePOPs (if it is already running you don't have
 to reastart it) and start telnet (under win32 you should open a DOS prompt,
 under unix you have the shell) and type telnet localhost 2000 and then
 type user test@foo.xx.
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
linespread{0.5}
\layout Standard

\backslash 
begin{footnotesize}
\layout Standard

\backslash 
begin{verbatim}
\layout Standard
tassi@garfield:~$ telnet localhost 2000 
\layout Standard
Trying 127.0.0.1... 
\layout Standard
Connected to garfield. 
\layout Standard
Escape character is '^]'. 
\layout Standard
+OK FreePOPs/0.0.10 pop3 server ready 
\layout Standard
user test@foo.xx 
\layout Standard
-ERR AUTH FAILED 
\layout Standard
Connection closed by foreign host. 
\layout Standard

\backslash 
end{verbatim}
\layout Standard

\backslash 
end{footnotesize}
\end_inset 

 The server respond closing the connection and printing an authorization
 failed message (thats ok, sice the user() function of our plugin returns
 this error).
 In the standard error file (the console under unix, the file stderr.txt)
 are printd error mesage, don't care about them now.
\layout Subsubsection

(step 2) the login
\layout Standard

The login procedure is the first thing we have to do.
 The POP3 protol has 2 commands for login, user and pass.
 First the client does a user, that it tells the server the password.
 As we have already seen in the overview this means that first user() and
 the pass() will be called.
 This is a sample login:
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
linespread{0.5}
\layout Standard

\backslash 
begin{footnotesize}
\layout Standard

\backslash 
begin{verbatim}
\layout Standard
tassi@garfield:~$ telnet localhost 2000 
\layout Standard
Trying 127.0.0.1... 
\layout Standard
Connected to garfield. 
\layout Standard
Escape character is '^]'. 
\layout Standard
+OK FreePOPs/0.0.10 pop3 server ready 
\layout Standard
user test@foo.xx 
\layout Standard
+OK PLEASE ENTER PASSWORD 
\layout Standard
pass hello 
\layout Standard
-ERR AUTH FAILED 
\layout Standard

\backslash 
end{verbatim}
\layout Standard

\backslash 
end{footnotesize}
\end_inset 

 If you start FreePOPs with the -w switch you sould read this on standard
 error/standard output
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
linespread{0.5}
\layout Standard

\backslash 
begin{footnotesize}
\layout Standard

\backslash 
begin{verbatim}
\layout Standard
freepops started with loglevel 2 on a little endian machine. 
\layout Standard
Cannot create pid file "/var/run/freepopsd.pid" 
\layout Standard
DBG(popserver.c, 162): [5118] ?? Ip address 0.0.0.0 real port 2000
\layout Standard
DBG(popserver.c, 162): [5118] ?? Ip address 127.0.0.1 real port 2000
\layout Standard
DBG(popserver.c, 162): [5118] -> +OK FreePOPs/0.0.10 pop3 server ready
\layout Standard
DBG(popserver.c, 162): [5118] <- user test@foo.xx
\layout Standard
DBG(log_lua.c,  83): (@src/lua/foo.lua, 37) : FreePOPs plugin 'Foo web mail' version '0.0.1' started!
\layout Standard
*** the user wants to login as 'test@foo.xx' 
\layout Standard
DBG(popserver.c, 162): [5118] -> +OK PLEASE ENTER PASSWORD
\layout Standard
DBG(popserver.c, 157): [5118] <- PASS ********* 
\layout Standard
*** the user inserted 'hello' as the password for 'test@foo.xx' 
\layout Standard
DBG(popserver.c, 162): [5118] -> -ERR AUTH FAILED
\layout Standard
AUTH FAILED 
\layout Standard
DBG(threads.c,  81): thread 0 will die 
\layout Standard

\backslash 
end{verbatim}
\layout Standard

\backslash 
end{footnotesize}
\end_inset 

and the plugin has been changed a bit to store the user login and print
 some debug infos.
 This is the plugin that gave this output:
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
linespread{0.5}
\layout Standard

\backslash 
begin{footnotesize}
\layout Standard

\backslash 
begin{verbatim}
\layout Standard
foo_globals= {  
\layout Standard
       username="nothing",
\layout Standard
       password="nothing" 
\layout Standard
} 
\layout Standard
-- -------------------------------------------------------------------------- -- 
\layout Standard
-- Must save the mailbox name 
\layout Standard
function user(pstate,username)   
\layout Standard
        foo_globals.username = username
\layout Standard
        print("*** the user wants to login as '"..username.."'")
\layout Standard
        return POPSERVER_ERR_OK
\layout Standard
end 
\layout Standard
-- -------------------------------------------------------------------------- -- 
\layout Standard
-- Must login 
\layout Standard
function pass(pstate,password)
\layout Standard
        foo_globals.password = password
\layout Standard
        print("*** the user inserted '"..password..
\layout Standard
            "' as the password for '"..foo_globals.username.."'")
\layout Standard
        return POPSERVER_ERR_AUTH end 
\layout Standard
-- -------------------------------------------------------------------------- -- 
\layout Standard
-- Must quit without updating 
\layout Standard
function quit(pstate)      
\layout Standard
        return POPSERVER_ERR_OK 
\layout Standard
end 
\layout Standard

\backslash 
end{verbatim}
\layout Standard

\backslash 
end{footnotesize}
\end_inset 

.
 Here we have some important news.
 First the foo_globals table that will contain all the globals (values that
 shoud be available to successive function calls) we need.
 Since now we have the username and the password here.
 The user() function now stores the passed username in the foo_globals table
 and prints something on standard output.
 The pass() function now stores the password in the global table and prints
 some stuff.
 The quit() simply returns POPSERVER_ERR_OK to make FreePOPs happy.
\layout Standard

Now that we know how FreePOPs will act during the login we have to implemt
 the login in the webmail, but first decomment the few lines in the init()
 function (that is called when the plugin is started) that loads the browser
 module (the module we will use to login in the webmail).
 Here there is the webmail login page viewed with mozilla and the source
 of the fage (with mozilla is Ctrl-U).
\layout Standard


\begin_inset Graphics
	filename login.eps
	display none
	scale 80
	keepAspectRatio

\end_inset 


\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
linespread{0.5}
\layout Standard

\backslash 
begin{footnotesize}
\layout Standard

\backslash 
begin{verbatim}
\layout Standard
<html> 
\layout Standard
<head> 
\layout Standard
<title>foo.xx webmail login</title> 
\layout Standard
</head> 
\layout Standard
<body style="background-color : grey; color : white"> 
\layout Standard
<h1>Webmail login</h1>
\layout Standard
<form name="webmail" method="post" action="http://localhost:3000/"> 
\layout Standard
login: <input type="text" size="10" name="username"> <br> 
\layout Standard
password: <input type="password" size="10" name="password"> <br> 
\layout Standard
<input type="submit" value="login"> 
\layout Standard
</form> 
\layout Standard
</body> 
\layout Standard
</html>
\layout Standard

\backslash 
end{verbatim}
\layout Standard

\backslash 
end{footnotesize}
\end_inset 

Here we have 2 input fields, one called username and one called password.
 When the user clicks login the web browser will POST to http://localhost:3000/
 the form contents (I used a local address because of comodity, but is should
 be something like http://webmail.foo.xx/login.php).
 This is what the browser sends:
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
linespread{0.5}
\layout Standard

\backslash 
begin{footnotesize}
\layout Standard

\backslash 
begin{verbatim}
\layout Standard
POST / HTTP/1.1 
\layout Standard
Host: localhost:3000 
\layout Standard
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.6) Gecko/20040614 Firefox/0.8 Accept: */*
\layout Standard
Accept-Language: en-us,en;q=0.5 
\layout Standard
Accept-Encoding: gzip,deflate 
\layout Standard
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7 
\layout Standard
Keep-Alive: 300 
\layout Standard
Connection: keep-alive 
\layout Standard
Content-Type: application/x-www-form-urlencoded 
\layout Standard
Content-Length: 37
\layout Standard

\layout Standard
username=test%40foo.xx&password=hello 
\layout Standard

\backslash 
end{verbatim}
\layout Standard

\backslash 
end{footnotesize}
\end_inset 

 We are not interested in the first part (the HTTP header, since the broser
 module will take care of this) but in the last part, the posted data.
 Since the fields of the form were username and password, the posted data
 is username=test%40foo.xx&password=hello.
 Now we want to reproduce the same HTTP request with our plugin.
 This is the simple code that will do this.
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
linespread{0.5}
\layout Standard

\backslash 
begin{footnotesize}
\layout Standard

\backslash 
begin{verbatim}
\layout Standard
-- -------------------------------------------------------------------------- -- 
\layout Standard
-- Must login 
\layout Standard
function pass(pstate,password)
\layout Standard
       foo_globals.password = password
\layout Standard
        
\layout Standard
       print("*** the user inserted '"..password..
\layout Standard
            "' as the password for '"..foo_globals.username.."'") 
\layout Standard

\layout Standard
       -- create a new browser
\layout Standard
       local b = browser.new()
\layout Standard

\layout Standard
       -- store the browser object in globals  
\layout Standard
       foo_globals.browser = b
\layout Standard

\layout Standard
       -- create the data to post      
\layout Standard
       local post_data = string.format("username=%s&password=%s",
\layout Standard
               foo_globals.username,foo_globals.password)
\layout Standard
       -- the uri to post to   
\layout Standard
       local post_uri = "http://localhost:3000/"
\layout Standard

\layout Standard
       -- post it      
\layout Standard
       local file,err = nil, nil       
\layout Standard
  
\layout Standard
       file,err = b:post_uri(post_uri,post_data)
\layout Standard
       
\layout Standard
       print("we received this webpage: ".. file)      
\layout Standard
       return POPSERVER_ERR_AUTH 
\layout Standard
end 
\layout Standard

\backslash 
end{verbatim}
\layout Standard

\backslash 
end{footnotesize}
\end_inset 

 First we create a browser object, than we build the post_uri and post_data
 using a simple string.format (printf like function).
 And this is the resulting request
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
linespread{0.5}
\layout Standard

\backslash 
begin{footnotesize}
\layout Standard

\backslash 
begin{verbatim}
\layout Standard
POST / HTTP/1.1 
\layout Standard
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.6) Gecko/20040322 Firefox/0.8
\layout Standard
Pragma: no-cache 
\layout Standard
Accept: */* 
\layout Standard
Host: localhost 
\layout Standard
Content-Length: 35 
\layout Standard
Content-Type: application/x-www-form-urlencoded
\layout Standard

\layout Standard
username=test@foo.xx&password=hello 
\layout Standard

\backslash 
end{verbatim}
\layout Standard

\backslash 
end{footnotesize}
\end_inset 

that is essentially the same (we should url-encode the post data with curl.escape
()) we wanted to do.
 We saved the browser object to the global table, since we want to use thesame
 browser all the time.
\layout Standard

Now that we have logged in, we want to check the resulting page, and maybe
 extract a session ID that will be used later.
 This is the code to extract the session id and the html page we have received
 in response to the login request.
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
linespread{0.5}
\layout Standard

\backslash 
begin{footnotesize}
\layout Standard

\backslash 
begin{verbatim}        
\layout Standard
        print("we received this webpage: ".. file)
\layout Standard
        
\layout Standard
        -- search the session ID        
\layout Standard
        local _,_,id = string.find(file,"session_id=(%w+)")
\layout Standard

\layout Standard
        if id == nil then               
\layout Standard
               return POPSERVER_ERR_AUTH
\layout Standard

\layout Standard
        foo_globals.session_id = id
\layout Standard
        return POPSERVER_ERR_OK
\layout Standard
end 
\layout Standard

\backslash 
end{verbatim}
\layout Standard

\backslash 
end{footnotesize}
\end_inset 


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
linespread{0.5}
\layout Standard

\backslash 
begin{footnotesize}
\layout Standard

\backslash 
begin{verbatim}
\layout Standard
<html> 
\layout Standard
<head> 
\layout Standard
<title>foo.xx webmail</title> 
\layout Standard
</head> 
\layout Standard
<body style="background-color : grey; color : white"> 
\layout Standard
<h1>Webmail - test@foo.xx</h1> 
\layout Standard
Login done! click here to view the inbox folder. 
\layout Standard
<a href="htp://localhost:3000/inbox.php?session_id=ABCD1234">inbox</a> 
\layout Standard
</body> 
\layout Standard
</html>
\layout Standard

\backslash 
end{verbatim}
\layout Standard

\backslash 
end{footnotesize}
\end_inset 


\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
linespread{0.5}
\layout Standard

\backslash 
begin{footnotesize}
\layout Standard

\backslash 
begin{verbatim}
\layout Standard

\backslash 
end{verbatim}
\layout Standard

\backslash 
end{footnotesize}
\end_inset 


\layout Section

Submitting a bug
\layout Standard

When you have problems or you think you found a bug, please follow strictly
 this 
\emph on 
iter
\emph default 
:
\layout Enumerate

Update to the most recent version of FreePOPs.
\layout Enumerate

Try to reproduce the bug, if the bug is not easily reproducible we are out
 of luck.
 Something can still be tried: if the software crashed you could compile
 it from the sources, install valgrind, run freepopsd with valgrind and
 hope the error messages are interesting.
\layout Enumerate

Clean the log files
\layout Enumerate

Start FreePOPs with the -w switch
\layout Enumerate

Reproduce the bug
\layout Enumerate

Send to the developers the log, plus any other info like your system type
 and how to reproduce this bug.
\layout Section

Authors
\layout Standard

This manual has been written by Enico Tassi 
\family typewriter 
<gareuselesinge@users.sourceforge.net>
\family default 
 and revised and translated by Nicola Cocchiaro 
\family typewriter 
<ncocchiaro@users.sourceforge.net>
\layout Subsection

Developers
\layout Standard

FreePOPs is developed by:
\layout Itemize

Enico Tassi 
\family typewriter 
<gareuselesinge@users.sourceforge.net>
\layout Itemize

Alessio Caprari 
\family typewriter 
<alessiofender@users.sourceforge.net>
\layout Itemize

Nicola Cocchiaro 
\family typewriter 
<ncocchiaro@users.sourceforge.net>
\layout Itemize

Simone Vellei 
\family typewriter 
<simone_vellei@users.sourceforge.net>
\layout Standard

LiberoPOPs is developed by:
\layout Itemize

Enico Tassi 
\family typewriter 
<gareuselesinge@users.sourceforge.net>
\layout Itemize

Alessio Caprari 
\family typewriter 
<alessiofender@users.sourceforge.net>
\layout Itemize

Nicola Cocchiaro 
\family typewriter 
<ncocchiaro@users.sourceforge.net>
\layout Itemize

Simone Vellei 
\family typewriter 
<simone_vellei@users.sourceforge.net>
\layout Itemize

Giacomo Tenaglia 
\family typewriter 
<sonicsmith@users.sourceforge.net>
\layout Section

Thanks
\layout Standard

Special thanks goes to the users who tested the software, to the hackers
 who made it possible to have a free and reliable development environment
 as the Debian GNU/Linux system.
\the_end
