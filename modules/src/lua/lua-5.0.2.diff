diff -ruN lua-5.0.2-old/Makefile lua-5.0.2-new/Makefile
--- lua-5.0.2-old/Makefile	2004-03-12 02:50:55.000000000 +0100
+++ lua-5.0.2-new/Makefile	2004-05-13 19:37:12.000000000 +0200
@@ -1,102 +1,79 @@
-# makefile for Lua hierarchy
-# see INSTALL for installation instructions
-# see config for customization instructions
-
-LUA= .
-
-include $(LUA)/config
-
-# primary targets ("co" and "klean" are used for making the distribution)
-all clean co klean:	dirs
-	cd include; $(MAKE) $@
-	cd src; $(MAKE) $@
-	cd src/lib; $(MAKE) $@
-	cd src/luac; $(MAKE) $@
-	cd src/lua; $(MAKE) $@
-
-# in case they were not created during unpacking
-dirs:	bin lib
-
-bin lib:
-	mkdir -p $@
-
-# simple test to see Lua working
-test:	all
-	bin/lua test/hello.lua
-
-# remove debug information from binaries
-strip:
-	$(STRIP) bin/*
-
-# official installation
-install: all strip
-	mkdir -p $(INSTALL_BIN) $(INSTALL_INC) $(INSTALL_LIB) $(INSTALL_MAN)
-	$(INSTALL_EXEC) bin/* $(INSTALL_BIN)
-	$(INSTALL_DATA) include/*.h $(INSTALL_INC)
-	$(INSTALL_DATA) lib/*.a $(INSTALL_LIB)
-	$(INSTALL_DATA) doc/*.1 $(INSTALL_MAN)
-
-# shared libraries (for Linux)
-so:
-	ld -o lib/liblua.so.$V -shared src/*.o
-	ld -o lib/liblualib.so.$V -shared src/lib/*.o
-	cd lib; ln -fs liblua.so.$V liblua.so; ln -fs liblualib.so.$V liblualib.so
-
-# binaries using shared libraries
-sobin:
-	rm -f bin/*
-	cd src/lua; $(MAKE)
-	cd src/luac; $(MAKE)
-
-# install shared libraries
-soinstall:
-	$(INSTALL_EXEC) lib/*.so.* $(INSTALL_LIB)
-	cd $(INSTALL_LIB); ln -fs liblua.so.$V liblua.so; ln -fs liblualib.so.$V liblualib.so
-
-# clean shared libraries
-soclean:
-	rm -f lib/*.so* bin/*
-
-# echo config parameters
-echo:
-	@echo ""
-	@echo "These are the parameters currently set in $(LUA)/config to build Lua $V:"
-	@echo ""
-	@echo "LOADLIB = $(LOADLIB)"
-	@echo "DLLIB = $(DLLIB)"
-	@echo "NUMBER = $(NUMBER)"
-	@echo "POPEN = $(POPEN)"
-	@echo "TMPNAM = $(TMPNAM)"
-	@echo "DEGREES = $(DEGREES)"
-	@echo "USERCONF = $(USERCONF)"
-	@echo "CC = $(CC)"
-	@echo "WARN = $(WARN)"
-	@echo "MYCFLAGS = $(MYCFLAGS)"
-	@echo "MYLDFLAGS = $(MYLDFLAGS)"
-	@echo "EXTRA_LIBS = $(EXTRA_LIBS)"
-	@echo "AR = $(AR)"
-	@echo "RANLIB = $(RANLIB)"
-	@echo "STRIP = $(STRIP)"
-	@echo "INSTALL_ROOT = $(INSTALL_ROOT)"
-	@echo "INSTALL_BIN = $(INSTALL_BIN)"
-	@echo "INSTALL_INC = $(INSTALL_INC)"
-	@echo "INSTALL_LIB = $(INSTALL_LIB)"
-	@echo "INSTALL_MAN = $(INSTALL_MAN)"
-	@echo "INSTALL_EXEC = $(INSTALL_EXEC)"
-	@echo "INSTALL_DATA = $(INSTALL_DATA)"
-	@echo ""
-	@echo "Edit $(LUA)/config if needed to suit your platform and then run make."
-	@echo ""
-
-# turn config into Lua code
-# uncomment the last sed expression if you want nil instead of empty strings
-lecho:
-	@echo "-- $(LUA)/config for Lua $V"
-	@echo "VERSION = '$(V)'"
-	@make echo | grep = | sed -e 's/= /= "/' -e 's/$$/"/' #-e 's/""/nil/'
-	@echo "-- EOF"
+include $(CONFIG)
 
-newer:
-	@find . -newer MANIFEST -type f
+ifneq "$(OS)" "Windows"
+	CFLAGS += -DUSE_DLOPEN=1
+endif
+ifneq "$(OS)" "Darwin"
+	CPFLAGS+= -a
+	LDFLAGS+= -Wl,-E
+	HLDFLAGS+= -Wl,-E
+endif
+
+CFLAGS += -I../../include -I../include -I. -I.. -DUSE_POPEN=1
+LDFLAGS+= -L../lib/ -L../../lib/ -llua-host -llualib-host -lm -ldl
+HCFLAGS += -I../../include -I../include -I. -I.. -DUSE_POPEN=1
+HLDFLAGS+= -L../lib/ -L../../lib/ -llua-host -llualib-host -lm -ldl
+
+all: bin/lua
+
+bin/lua:
+	@echo -n ' building core library... '
+	@cd src ; 					\
+		$(CC) $(CFLAGS) -c  *.c ; 		\
+		$(AR) rc ../lib/liblua.a *.o ; 		\
+		$(RANLIB) ../lib/liblua.a ;		\
+		rm -f *.o
+	@echo "done."
+
+	@echo -n ' building standard library... '
+	@cd src/lib;					\
+		$(CC) $(CFLAGS) -c  *.c ;		\
+		$(AR) rc ../../lib/liblualib.a *.o ;	\
+		$(RANLIB) ../../lib/liblualib.a ;	\
+		rm -f *.o 
+	@echo "done."
+
+	@if test "$(HCC)" = "$(CC)" ; then				\
+		cd lib/ ; 						\
+			ln -s liblua.a liblua-host.a ;			\
+			ln -s liblualib.a liblualib-host.a ;		\
+	else								\
+		echo -n ' building core host library... ';	\
+		cd src ; 						\
+			$(HCC) $(HCFLAGS) -c *.c ; 			\
+			$(HAR) rc ../lib/liblua-host.a *.o ; 	\
+			$(RANLIB) ../lib/liblua-host.a ;		\
+			rm -f *.o;					\
+		echo "done.";						\
+		echo -n ' building standard host library... ';		\
+		cd ../src/lib;						\
+			$(HCC) $(HCFLAGS) -c *.c ;			\
+			$(HAR) rc ../../lib/liblualib-host.a *.o ;	\
+			$(HRANLIB) ../../lib/liblualib-host.a ;		\
+			rm -f *.o ;					\
+		echo "done.";						\
+	fi
+
+	@echo -n ' building lua... '
+	@cd src/lua;					\
+		$(HCC) $(HCFLAGS) -o ../../bin/lua *.c $(HLDFLAGS)
+	@echo "done."
+
+	@echo -n ' building luac... '
+	@cd src/luac ;					\
+		$(HCC) $(HCFLAGS) -o ../../bin/luac *.c 	\
+			-DLUA_OPNAMES ../lopcodes.c $(HLDFLAGS)
+	@echo "done."
+
+	@echo -n ' building bin2c... '
+	@cd etc ;					\
+		$(HCC) $(HCFLAGS) -o ../bin/bin2c bin2c.c 	\
+			$(HLDFLAGS)
+	@echo "done."
+
+	@cp include/*.h $(PREFIX)/include
+	@cp bin/* $(PREFIX)/bin
+	@cp $(CPFLAGS) lib/*.a $(PREFIX)/lib
 
-# (end of Makefile)
+clean:
+	@rm -f lib/* bin/*
diff -ruN lua-5.0.2-old/build lua-5.0.2-new/build
--- lua-5.0.2-old/build	2003-03-28 21:06:41.000000000 +0100
+++ lua-5.0.2-new/build	1970-01-01 01:00:00.000000000 +0100
@@ -1,33 +0,0 @@
-# If you don't want to use make, run this script.
-# But make sure you read config to see what can be customized.
-
-
-# Easiest way to build bin/lua:
-# cc -O2 -o bin/lua -Iinclude -Isrc src/*.c src/lib/*.c src/lua/*.c -lm -ldl
-
-
-# Easiest way to build Lua libraries and executables:
-echo -n 'building core library... '
-cd src
-cc -O2 -c -I../include *.c
-ar rc ../lib/liblua.a *.o
-rm -f *.o
-
-echo -n 'standard library... '
-cd lib
-cc -O2 -c -I../../include *.c
-ar rc ../../lib/liblualib.a *.o
-rm -f *.o
-
-echo -n 'lua... '
-cd ../lua
-cc -O2 -o ../../bin/lua -I../../include *.c ../../lib/*.a -lm -ldl
-
-echo -n 'luac... '
-cd ../luac
-cc -O2 -o ../../bin/luac -I../../include -I.. *.c -DLUA_OPNAMES ../lopcodes.c ../../lib/*.a
-
-echo 'done'
-
-cd ../..
-bin/lua test/hello.lua
